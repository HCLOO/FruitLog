package dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.think.fruitlog.daotable.BuyLog;
import com.example.think.fruitlog.daotable.Fruit;
import com.example.think.fruitlog.daotable.LogTag;
import com.example.think.fruitlog.daotable.PraiseLog;

import dao.BuyLogDao;
import dao.FruitDao;
import dao.LogTagDao;
import dao.PraiseLogDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig buyLogDaoConfig;
    private final DaoConfig fruitDaoConfig;
    private final DaoConfig logTagDaoConfig;
    private final DaoConfig praiseLogDaoConfig;

    private final BuyLogDao buyLogDao;
    private final FruitDao fruitDao;
    private final LogTagDao logTagDao;
    private final PraiseLogDao praiseLogDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        buyLogDaoConfig = daoConfigMap.get(BuyLogDao.class).clone();
        buyLogDaoConfig.initIdentityScope(type);

        fruitDaoConfig = daoConfigMap.get(FruitDao.class).clone();
        fruitDaoConfig.initIdentityScope(type);

        logTagDaoConfig = daoConfigMap.get(LogTagDao.class).clone();
        logTagDaoConfig.initIdentityScope(type);

        praiseLogDaoConfig = daoConfigMap.get(PraiseLogDao.class).clone();
        praiseLogDaoConfig.initIdentityScope(type);

        buyLogDao = new BuyLogDao(buyLogDaoConfig, this);
        fruitDao = new FruitDao(fruitDaoConfig, this);
        logTagDao = new LogTagDao(logTagDaoConfig, this);
        praiseLogDao = new PraiseLogDao(praiseLogDaoConfig, this);

        registerDao(BuyLog.class, buyLogDao);
        registerDao(Fruit.class, fruitDao);
        registerDao(LogTag.class, logTagDao);
        registerDao(PraiseLog.class, praiseLogDao);
    }
    
    public void clear() {
        buyLogDaoConfig.clearIdentityScope();
        fruitDaoConfig.clearIdentityScope();
        logTagDaoConfig.clearIdentityScope();
        praiseLogDaoConfig.clearIdentityScope();
    }

    public BuyLogDao getBuyLogDao() {
        return buyLogDao;
    }

    public FruitDao getFruitDao() {
        return fruitDao;
    }

    public LogTagDao getLogTagDao() {
        return logTagDao;
    }

    public PraiseLogDao getPraiseLogDao() {
        return praiseLogDao;
    }

}
